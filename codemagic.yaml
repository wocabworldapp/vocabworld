workflows:
  ios-workflow:
    name: VocabWorld iOS - Capacitor Build
    max_build_duration: 120
    instance_type: mac_mini_m1
    environment:
      node: 18
      xcode: latest
      cocoapods: default
    scripts:
      - name: Install dependencies
        script: npm install
      - name: Install Capacitor CLI
        script: npm install -g @capacitor/cli
      - name: Build Next.js app
        script: |
          # Build the Next.js app for production
          npm run build
          
          # Verify the build was successful
          echo "‚úÖ Next.js build completed"
          ls -la dist/
      - name: Sync Capacitor
        script: npx cap sync ios
      - name: Build unsigned iOS app
        script: |
          cd ios/App
          
          echo "üîß Building unsigned iOS app for development testing..."
          
          # Build without code signing
          xcodebuild -workspace App.xcworkspace \
            -scheme App \
            -configuration Release \
            -destination generic/platform=iOS \
            -archivePath $CM_BUILD_DIR/VocabWorld.xcarchive \
            CODE_SIGNING_ALLOWED=NO \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGN_IDENTITY="" \
            PROVISIONING_PROFILE="" \
            archive
          
          echo "üì¶ Creating IPA package..."
          
          # Create IPA manually
          if [ -d "$CM_BUILD_DIR/VocabWorld.xcarchive/Products/Applications/App.app" ]; then
            mkdir -p $CM_BUILD_DIR/Payload
            cp -r "$CM_BUILD_DIR/VocabWorld.xcarchive/Products/Applications/App.app" "$CM_BUILD_DIR/Payload/"
            
            # Create embedded mobileprovision file (required for IPA installation)
            # Using echo to avoid YAML parsing issues with XML content
            echo '<?xml version="1.0" encoding="UTF-8"?>' > embedded.mobileprovision
            echo '<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">' >> embedded.mobileprovision
            echo '<plist version="1.0">' >> embedded.mobileprovision
            echo '<dict>' >> embedded.mobileprovision
            echo '    <key>AppIDName</key>' >> embedded.mobileprovision
            echo '    <string>VocabWorld Development</string>' >> embedded.mobileprovision
            echo '    <key>ApplicationIdentifierPrefix</key>' >> embedded.mobileprovision
            echo '    <array><string>DEV123</string></array>' >> embedded.mobileprovision
            echo '    <key>CreationDate</key>' >> embedded.mobileprovision
            echo '    <date>2024-09-29T00:00:00Z</date>' >> embedded.mobileprovision
            echo '    <key>DeveloperCertificates</key>' >> embedded.mobileprovision
            echo '    <array><data>LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJVENDQWdtZ0F3SUJBZ0lKQU5Eb1FLM3VOMjYwTUEwR0NTcUdTSWIzRFFFQkN3VUFNQzB4Q3pBSkJnTlYKQkFZVEFsVlRNUXd3Q2dZRFZRUUlEQU5CUFRFUEF3MEVDVGo0Q2dZRFZRUUtEQUJWYm1sMGJGTjBZV1IxQ2xVbVZoYzIxOQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==</data></array>' >> embedded.mobileprovision
            echo '    <key>Entitlements</key>' >> embedded.mobileprovision
            echo '    <dict>' >> embedded.mobileprovision
            echo '        <key>application-identifier</key>' >> embedded.mobileprovision
            echo '        <string>DEV123.com.vocabworld.languagelearning</string>' >> embedded.mobileprovision
            echo '        <key>com.apple.developer.team-identifier</key>' >> embedded.mobileprovision
            echo '        <string>DEV123</string>' >> embedded.mobileprovision
            echo '        <key>get-task-allow</key>' >> embedded.mobileprovision
            echo '        <true/>' >> embedded.mobileprovision
            echo '        <key>keychain-access-groups</key>' >> embedded.mobileprovision
            echo '        <array><string>DEV123.*</string></array>' >> embedded.mobileprovision
            echo '    </dict>' >> embedded.mobileprovision
            echo '    <key>ExpirationDate</key>' >> embedded.mobileprovision
            echo '    <date>2025-12-31T23:59:59Z</date>' >> embedded.mobileprovision
            echo '    <key>Name</key>' >> embedded.mobileprovision
            echo '    <string>VocabWorld Development</string>' >> embedded.mobileprovision
            echo '    <key>Platform</key>' >> embedded.mobileprovision
            echo '    <array><string>iOS</string></array>' >> embedded.mobileprovision
            echo '    <key>ProvisionsAllDevices</key>' >> embedded.mobileprovision
            echo '    <true/>' >> embedded.mobileprovision
            echo '    <key>TeamIdentifier</key>' >> embedded.mobileprovision
            echo '    <array><string>DEV123</string></array>' >> embedded.mobileprovision
            echo '    <key>TeamName</key>' >> embedded.mobileprovision
            echo '    <string>VocabWorld Team</string>' >> embedded.mobileprovision
            echo '    <key>TimeToLive</key>' >> embedded.mobileprovision
            echo '    <integer>365</integer>' >> embedded.mobileprovision
            echo '    <key>UUID</key>' >> embedded.mobileprovision
            echo '    <string>12345678-90AB-CDEF-1234-567890ABCDEF</string>' >> embedded.mobileprovision
            echo '    <key>Version</key>' >> embedded.mobileprovision
            echo '    <integer>1</integer>' >> embedded.mobileprovision
            echo '</dict>' >> embedded.mobileprovision
            echo '</plist>' >> embedded.mobileprovision
            
            # Copy the mobileprovision into the app bundle
            cp embedded.mobileprovision "$CM_BUILD_DIR/Payload/App.app/embedded.mobileprovision"
            echo "‚úÖ Added embedded.mobileprovision to app bundle"
            
            cd $CM_BUILD_DIR
            zip -r VocabWorld.ipa Payload/
            
            echo "üìÅ File size: $(ls -lh VocabWorld.ipa | awk '{print $5}')"
            
            # Create installation guide
            cat > iPhone_Installation_Guide.txt << 'GUIDE'
          üì± VocabWorld Installation Guide - iPhone Testing

          üö® INSTALL ON YOUR IPHONE:

          1. üì• Download VocabWorld.ipa from Codemagic artifacts
          2. üåê Go to diawi.com on your computer
          3. üì± Upload VocabWorld.ipa to Diawi
          4. üì≤ Open the Diawi link on your iPhone in Safari
          5. ‚úÖ Tap "Install" when prompted
          6. ‚öôÔ∏è Go to Settings > General > VPN & Device Management
          7. üë®‚Äçüíª Find "VocabWorld Development Team" and tap "Trust"
          8. üöÄ Open VocabWorld app to test!

          üì± What to Expect:
          - Native iOS app (not Safari web view)
          - Purple status bar background
          - Capacitor native functionality
          - Your Next.js VocabWorld content

          ‚ú® This is a complete native iOS app built with Capacitor!
          GUIDE
            
            # Verify the file exists and has content
            if [ -f "VocabWorld.ipa" ] && [ -s "VocabWorld.ipa" ]; then
              echo "üéØ VocabWorld.ipa is ready for download!"
              echo "üìã IPA contents:"
              unzip -l VocabWorld.ipa | head -20
              echo "üì± Checking for embedded.mobileprovision:"
              unzip -l VocabWorld.ipa | grep mobileprovision || echo "‚ùå No mobileprovision found in IPA"
              echo "üìÇ App bundle contents:"
              unzip -l VocabWorld.ipa | grep "Payload/App.app/"
            else
              echo "‚ùå IPA file is empty or missing"
            fi
          else
            echo "‚ùå App bundle not found in archive"
            echo "üîç Available files:"
            find $CM_BUILD_DIR -name "*.app" -type d
            find $CM_BUILD_DIR -name "*.xcarchive" -type d
          fi
    artifacts:
      - VocabWorld.ipa
      - iPhone_Installation_Guide.txt
      - ios/App/build/Release-iphoneos/*.app